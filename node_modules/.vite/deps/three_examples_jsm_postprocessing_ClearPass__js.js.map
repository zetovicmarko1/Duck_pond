{
  "version": 3,
  "sources": ["../../three/examples/jsm/postprocessing/ClearPass.js"],
  "sourcesContent": ["import {\n\tColor\n} from 'three';\nimport { Pass } from './Pass.js';\n\nclass ClearPass extends Pass {\n\n\tconstructor( clearColor, clearAlpha ) {\n\n\t\tsuper();\n\n\t\tthis.needsSwap = false;\n\n\t\tthis.clearColor = ( clearColor !== undefined ) ? clearColor : 0x000000;\n\t\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 0;\n\t\tthis._oldClearColor = new Color();\n\n\t}\n\n\trender( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tlet oldClearAlpha;\n\n\t\tif ( this.clearColor ) {\n\n\t\t\trenderer.getClearColor( this._oldClearColor );\n\t\t\toldClearAlpha = renderer.getClearAlpha();\n\n\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( this.renderToScreen ? null : readBuffer );\n\t\trenderer.clear();\n\n\t\tif ( this.clearColor ) {\n\n\t\t\trenderer.setClearColor( this._oldClearColor, oldClearAlpha );\n\n\t\t}\n\n\t}\n\n}\n\nexport { ClearPass };\n"],
  "mappings": ";;;;;;;;AAKA,IAAM,YAAN,cAAwB,KAAK;AAAA,EAE5B,YAAa,YAAY,YAAa;AAErC,UAAM;AAEN,SAAK,YAAY;AAEjB,SAAK,aAAe,eAAe,SAAc,aAAa;AAC9D,SAAK,aAAe,eAAe,SAAc,aAAa;AAC9D,SAAK,iBAAiB,IAAI,MAAM;AAAA,EAEjC;AAAA,EAEA,OAAQ,UAAU,aAAa,YAA0C;AAExE,QAAI;AAEJ,QAAK,KAAK,YAAa;AAEtB,eAAS,cAAe,KAAK,cAAe;AAC5C,sBAAgB,SAAS,cAAc;AAEvC,eAAS,cAAe,KAAK,YAAY,KAAK,UAAW;AAAA,IAE1D;AAEA,aAAS,gBAAiB,KAAK,iBAAiB,OAAO,UAAW;AAClE,aAAS,MAAM;AAEf,QAAK,KAAK,YAAa;AAEtB,eAAS,cAAe,KAAK,gBAAgB,aAAc;AAAA,IAE5D;AAAA,EAED;AAED;",
  "names": []
}
